/*SASHA, ALLIE, KATE, REY, ELIOT*/

import java.util.Scanner;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

import java.util.ArrayList;

import javafx.application.Application;
import javafx.scene.control.*;
import javafx.geometry.Pos;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.shape.*;
import javafx.scene.text.Text;
import javafx.scene.layout.FlowPane;
import javafx.scene.text.*;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.stage.Stage;
import javafx.scene.layout.GridPane;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.media.AudioClip;
import java.io.File;

//import java.util.Random;

public class GameDemo {
	public static void main(String[]args) {
		Scanner kb = new Scanner(System.in);
		ArrayList<Character> vote = new ArrayList<Character>(); 
		ArrayList<Character> mafiaVote = new ArrayList<Character>();
		ArrayList<Character> players = new ArrayList<Character>();
		ArrayList <Integer> role = new ArrayList<Integer>();
      ArrayList<Character> townies = new ArrayList<Character>();
		boolean keepPlaying = true;
		boolean safe = false;
		Q_ArrayList mafia = new Q_ArrayList();
		boolean day = false; //updates to false during nightPhase
		boolean win = false; //if win conditions are met

		while(keepPlaying==true) {
			//adds numbs to arrayList to assign roles
			for(int i=1; i<=8;i++) {
				role.add(i);
			}
			//intake
			//restate in chat and game
			for(int i=1; i<=8; i++) {
				Character c = new Character();
				JFrame frame = new JFrame("Create Character");
    				String name = JOptionPane.showInputDialog(frame, "Enter your desired username (can't be the same as another player)", "Create Character", JOptionPane.WARNING_MESSAGE);
               c.setName(name);
    				c.setRole(role.get(0));
    				c.setAlive(true);
    		
    				JFrame frame2 = new JFrame("Create Character");
    				String pw = JOptionPane.showInputDialog(frame2, "Enter your desired password", "Create Character", JOptionPane.WARNING_MESSAGE);
    				c.setPassword(pw);
				   String currRole = c.getRole();
				   role.remove(0);
				   players.add(c);
				   if(currRole.equals("Mafia")) {
					   mafia.enqueue(c);
				   }
               else
                  townies.add(c);
			}
         
			while(!win) {
			//Application.launch(Night.class, args);//nighttime GUI
			for(int i=0; i<players.size(); i++) {
				String attempt1 = JOptionPane.showInputDialog(players.get(i).getName() + " please enter your password to take your turn."+players.get(i).getPassword());
				//if they get their password wrong
				while(!attempt1.equals(players.get(i).getPassword())) {
					attempt1 = JOptionPane.showInputDialog(players.get(i).getName() + " looks like you input the wrong password! Please enter your password to take your turn.");
				}     
				//when mafiaNight() method is called, to count up mafia votes
				if(players.get(i).getRole().equals("Mafia") && mafia.get(i).getName().equals(players.get(0).getName())) {
					mafiaNight(players, mafiaVote);
				}
				else if(players.get(i).getRole().equals("Mafia") && !mafia.get(i).getName().equals(players.get(0).getName())) {
					fakeMafia();
				}
				else if(players.get(i).getRole().equals("Doctor")) {
					doctorNight(players);
				}
				else if(players.get(i).getRole().equals("Police")) {
					policeNight(players);
				}
				else {
					fake();
				}
			}
			//update the queue so the next mafia gets to vote next round
			mafia.enqueue(mafia.get(0));
			mafia.dequeue(mafia.get(0));
			//check to make sure the person with the most votes isn't safe
			if(mafiaVote.isEmpty()){
            break;
         }
         else if(!mafiaVote.get(0).getSafe()) {
				mafiaVote.get(0).setAlive(false);
				players.remove(mafiaVote.get(0));
            if(mafiaVote.get(0).getIsMafia())
               mafia.remove(mafiaVote.get(0));
			}
			else {
				safe = true;
			}
			//Application.launch(Day.class, args);//launch the day GUI
			if(safe==false) {
				System.out.println("Last night, the mafia decided to kill "+ mafiaVote.get(0).getName() +". Who could've done it? You decide.");
			}
			else {
				System.out.println("Last night, the mafia decided to kill "+ mafiaVote.get(0).getName() +", BUT they were saved by the doctor. Who will they target next?");
				safe=false;
			}
			mafiaVote.clear();
			//ask all players to vote on who they think is the mafia
			for(int i=0; i<players.size(); i++) {
				if(players.get(i).getAlive())
               voting(players, vote);
			}
			//when all vote, figure out who gets murdered
			int counter=0, most=0;
			Character mostVotes = null; safe = false;
			for(int k=0; k<players.size();k++) {
				for(int j=0; j<vote.size(); j++) {
					if(vote.get(j).getName().equals(players.get(k).getName())) {
						counter++;
					}
				}
				if(counter>most) {
					most=counter;
					mostVotes = players.get(k);
				}
			}
			//check to make sure the person with the most votes isn't safe
			if(!mostVotes.getSafe()) {
				mostVotes.setAlive(false);
				players.remove(mostVotes);
            System.out.println("The town decided to execute "+mostVotes.getName()+" today. Who will be next?");
			}
			else {
				safe = true;
			}
			vote.clear();
			/*int count=0;
			for(int i=1; i<players.size();i++){
		       	if(players.get(i).getIsMafia())
		       		count++;
		    }
			if(count!=0) {
				win = false;
			}
			else {
				win = true;
			}*/
         win=false;
         if(players.size()==1)
            win=true;
         if(players.size()==2 && !players.get(0).getIsMafia() && !players.get(1).getIsMafia())
            win=true;
         
			}
			//tell everyone who won
         if((!mafia.isEmpty() && townies.isEmpty()))   
            System.out.println("Mafia WON!");
         else
            System.out.println("The town WON!");
         //ask to play another round
         if(JOptionPane.showConfirmDialog(null, "Play again?", "Play again?", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION) {
				keepPlaying = true;
			}
			else 
				keepPlaying = false;
         players.clear();
			}
		System.out.println("Thanks for playing!");
      System.exit(0);
	}
	//method for mafia's vote at night
	public static void mafiaNight(ArrayList<Character> players, ArrayList<Character> mafiaVote) {
		JFrame frame = new JFrame("Mafia - Night Phase");
		String[] options = new String[players.size()];
		
        for(int i=0; i<players.size(); i++) { // set the options to each player's name
        	options[i] = players.get(i).getName();
        }
        String nameOfVote; Character voted = null;
        nameOfVote = (String)JOptionPane.showInputDialog(frame, "Who would you like to murder tonight?", "Mafia = Night Phase", JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        for(int i=0; i<players.size(); i++) {
        		if(players.get(i).getName().equals(nameOfVote))
        			voted = players.get(i);
        }
        mafiaVote.add(voted);
        for(int i=0; i<options.length; i++){
            options[i]=null;
        }
	}
	//method for police's actions at night
	public static void policeNight(ArrayList<Character> players) {
		JFrame frame = new JFrame("Police - Night Phase");
        String[] options = new String[players.size()];
        
        for(int i=0; i<players.size(); i++) { // set the options to each player's name
        	options[i] = players.get(i).getName();
        }
        String nameOfInvest; Character investee = null;
        nameOfInvest = (String)JOptionPane.showInputDialog(frame, "Who would you like to investigate tonight?", "Police - Night Phase", JOptionPane.QUESTION_MESSAGE, null, options, options[0]); //dropdown
	    for(int i=0;i<players.size();i++) {
	    		if(players.get(i).getName().equals(nameOfInvest))
	    			investee = players.get(i);
	    }
	    
	    //sends pane saying status of investee
	    JFrame investResult = new JFrame();  
	    if(investee.getRole().equals("Mafia")) {
	    		JOptionPane.showMessageDialog(investResult,(investee.getName()+" is a member of the mafia.")); 
	    }
	    else {
	    		JOptionPane.showMessageDialog(investResult,(investee.getName()+" is not a member of the mafia.")); 
	    }
	}
	//method for doctor's actions at night
	public static void doctorNight(ArrayList<Character> players) {
	    JFrame frame = new JFrame("Doctor - Night Phase");
        String[] options = new String[players.size()];
        
        for(int i=0; i<players.size(); i++) { // set the options to each player's name
        	options[i] = players.get(i).getName();
        }
        String nameOfSafe;
        nameOfSafe = (String)JOptionPane.showInputDialog(frame, "Who would like to protect tonight?", "Doctor - Night Phase", JOptionPane.QUESTION_MESSAGE, null, options, options[0]); //dropdown
	    for(int i=0;i<players.size();i++) {
	    		if(players.get(i).getName().equals(nameOfSafe))
	    			players.get(i).setSafe(true); //saves the one player
	    		else
	    			players.get(i).setSafe(false); //makes everyone else vulnerable
	    }
	    
	    //sends pane saying that it was done
	    JFrame done = new JFrame();  
	    JOptionPane.showMessageDialog(done,(nameOfSafe+" has been protected for the night."));  //reconfirms that that player has been saved
	    
	
	}
	//method for everyone to vote who mafia 
	//Everyone daytime voting
	public static void voting (ArrayList<Character>players, ArrayList<Character>votes) {
		JFrame frame = new JFrame("Voting Phase");
        String[] options = new String[players.size()];
	        
	    for(int i=0; i<players.size(); i++) { // set the options to each player's name
	    		options[i] = players.get(i).getName();
        }
	    String exe; Character hang= null;
	    exe = (String)JOptionPane.showInputDialog(frame, "Who do you think the town should hang?", "Voting Phase", JOptionPane.QUESTION_MESSAGE, null, options, options[0]); //dropdown
	    for(int i=0;i<players.size();i++) {
	    		if(players.get(i).getName().equals(exe)) {
		    		hang = players.get(i);
		    		votes.add(hang);
	    		}
	    }
		//sends pane confirms
		JFrame thanks = new JFrame(); 
		JOptionPane.showMessageDialog(thanks,("You have successfully voted for "+hang.getName())); 
	}
	//for when the civilians don't need to do anything 
	public static void fake() {
		JOptionPane.showConfirmDialog(null, "Civilians don't do anything at night! But don't let your opponents know!");
	}
	//for when its not the mafias turn
	public static void fakeMafia() {
		JOptionPane.showConfirmDialog(null, "You're a mafia but it is not your turn to kill! But don't let your opponents know!");
	}
}
